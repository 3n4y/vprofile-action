name: "Setup Infrastructure"
on:
  push:
    branches:
      - staging
#    paths:
#      - terraform/**
      
env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.3"

      - name: Configure Terraform variables
        id: key_vars
        run: echo "public_key = \"$PUBLIC_KEY\"" > terraform.tfvars

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Get instance IP
        id: instance_ip
        run: echo "$(terraform output -raw instance_ip)" > instance_ip.txt

      - name: Upload instance IP artifact
        uses: actions/upload-artifact@v3
        with:
          name: instance_ip
          path: instance_ip.txt

